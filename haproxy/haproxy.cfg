# 🇨🇺 PACKFY CUBA - Configuración HAProxy v4.0
global
    daemon
    log stdout local0

    # Stats socket para administración
    stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin

    # SSL/TLS configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close

    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

    # Compresión automática
    compression algo gzip
    compression type text/html text/plain text/css text/javascript application/javascript application/json

    # Headers de seguridad
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"

# Frontend para estadísticas
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-legends
    stats show-node
    stats admin if TRUE

# Frontend Principal HTTP/HTTPS
frontend packfy_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/packfy.pem

    # Redirigir HTTP a HTTPS
    redirect scheme https if !{ ssl_fc }

    # Detección de region por geolocalización
    acl cuba_region hdr_sub(CF-IPCountry) CU
    acl mexico_region hdr_sub(CF-IPCountry) MX
    acl colombia_region hdr_sub(CF-IPCountry) CO
    acl usa_region hdr_sub(CF-IPCountry) US
    acl spain_region hdr_sub(CF-IPCountry) ES

    # Rutas estáticas (CDN)
    acl is_static path_beg /static /media /assets /images /css /js

    # API routes
    acl is_api path_beg /api

    # Admin routes
    acl is_admin path_beg /admin

    # Rate limiting por IP
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 20 }

    # Usar backend apropiado
    use_backend static_servers if is_static
    use_backend api_servers if is_api
    use_backend admin_servers if is_admin
    default_backend web_servers

# Backend para contenido estático (CDN)
backend static_servers
    balance roundrobin
    option httpchk GET /health

    # Cache headers para contenido estático
    http-response set-header Cache-Control "public, max-age=31536000"
    http-response set-header Expires %[date(31536000),http_date]

    server static1 frontend-cdn:80 check
    server static2 frontend-cdn:80 check backup

# Backend para API (servidores de aplicación)
backend api_servers
    balance leastconn
    option httpchk GET /api/health/

    # Health checks más frecuentes para API
    default-server check inter 2000 rise 2 fall 3

    # Sticky sessions para WebSocket
    cookie SERVERID insert indirect nocache

    server api1 backend-1:8000 check cookie api1 weight 100
    server api2 backend-2:8000 check cookie api2 weight 100
    server api3 backend-3:8000 check cookie api3 weight 100

# Backend para administración (más seguro)
backend admin_servers
    balance source
    option httpchk GET /admin/login/

    # Solo servidores específicos para admin
    server admin1 backend-1:8000 check
    server admin2 backend-2:8000 check backup

# Backend principal para aplicación web
backend web_servers
    balance roundrobin
    option httpchk GET /health/

    # Configuración de failover
    default-server check inter 3000 rise 2 fall 3

    # Distribución por región (si está disponible)
    server web1 backend-1:8000 check weight 100
    server web2 backend-2:8000 check weight 100
    server web3 backend-3:8000 check weight 100

# Backend específico para WebSocket (tiempo real)
backend websocket_servers
    balance source
    option httpchk GET /ws/health/

    # Sin timeout para conexiones WebSocket
    timeout server 3600s
    timeout tunnel 3600s

    server ws1 backend-1:8001 check
    server ws2 backend-2:8001 check
    server ws3 backend-3:8001 check

# Configuración para monitoreo avanzado
listen packfy_monitoring
    bind *:9200
    mode http

    # Métricas de HAProxy
    stats enable
    stats uri /haproxy-stats
    stats refresh 5s
    stats show-legends
    stats show-node
    stats admin if TRUE

    # Endpoint de salud personalizado
    monitor-uri /health
    monitor fail if { nbsrv(api_servers) eq 0 }
    monitor fail if { nbsrv(web_servers) eq 0 }

# Configuración especial para regiones internacionales
frontend international_frontend
    bind *:8080

    # Solo para tráfico internacional
    acl international_traffic hdr_sub(CF-IPCountry) -m reg ^(MX|CO|US|ES)$

    use_backend international_servers if international_traffic
    default_backend web_servers

backend international_servers
    balance roundrobin
    option httpchk GET /api/health/

    # Configuración optimizada para latencia internacional
    timeout server 10000ms

    server intl1 backend-1:8000 check
    server intl2 backend-2:8000 check
    server intl3 backend-3:8000 check
