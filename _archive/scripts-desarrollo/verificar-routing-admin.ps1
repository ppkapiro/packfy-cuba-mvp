# Verificar routing de admin despu√©s de cambios
Write-Host "üîÑ VERIFICANDO ROUTING ADMIN ACTUALIZADO" -ForegroundColor Cyan
Write-Host "=======================================" -ForegroundColor Cyan

Write-Host "`nüè∑Ô∏è  INFORMACI√ìN DEL TEST:" -ForegroundColor Yellow
Write-Host "Usuario: admin@packfy.com (rol: dueno)" -ForegroundColor Gray
Write-Host "Empresa: packfy-express" -ForegroundColor Gray
Write-Host "Cambio: Rutas /admin/* ahora van a AdminRouter" -ForegroundColor Gray

$baseUrl = "http://localhost:8000"
$frontendUrl = "http://localhost:5173"

Write-Host "`nüîê PASO 1: Autenticaci√≥n como due√±o..." -ForegroundColor Green

$loginBody = @{
    email    = "admin@packfy.com"
    password = "packfy123"
    tenant   = "packfy-express"
} | ConvertTo-Json

$headers = @{
    "Content-Type" = "application/json"
}

try {
    $loginResponse = Invoke-RestMethod -Uri "$baseUrl/auth/login/" -Method POST -Body $loginBody -Headers $headers
    $token = $loginResponse.access_token

    Write-Host "‚úÖ Login exitoso" -ForegroundColor Green
    Write-Host "   Token: $($token.Substring(0,20))..." -ForegroundColor Gray
    Write-Host "   Usuario: $($loginResponse.user.nombre) $($loginResponse.user.apellidos)" -ForegroundColor Gray
    Write-Host "   Rol: $($loginResponse.user.perfil_actual.rol)" -ForegroundColor Gray

    # Headers con autenticaci√≥n
    $authHeaders = @{
        "Authorization" = "Bearer $token"
        "X-Tenant-ID"   = "packfy-express"
        "Content-Type"  = "application/json"
    }

    Write-Host "`nüìä PASO 2: Verificando endpoints principales..." -ForegroundColor Green

    # Verificar endpoint de perfil
    $profile = Invoke-RestMethod -Uri "$baseUrl/auth/perfil/" -Method GET -Headers $authHeaders
    Write-Host "‚úÖ Perfil verificado - Rol: $($profile.rol)" -ForegroundColor Green

    # Verificar env√≠os
    $envios = Invoke-RestMethod -Uri "$baseUrl/envios/" -Method GET -Headers $authHeaders
    Write-Host "‚úÖ Env√≠os cargados: $($envios.results.Count) encontrados" -ForegroundColor Green

    Write-Host "`nüåê PASO 3: URLs de testing del frontend..." -ForegroundColor Green
    Write-Host "Frontend principal: $frontendUrl" -ForegroundColor White
    Write-Host "Login directo: $frontendUrl/login" -ForegroundColor White
    Write-Host "Dashboard admin: $frontendUrl/admin/dashboard" -ForegroundColor Yellow
    Write-Host "Env√≠os admin: $frontendUrl/admin/envios" -ForegroundColor Yellow
    Write-Host "Usuarios admin: $frontendUrl/admin/usuarios" -ForegroundColor Yellow

    Write-Host "`nüîç PASO 4: Instrucciones de verificaci√≥n manual..." -ForegroundColor Green
    Write-Host "1. Abrir: $frontendUrl" -ForegroundColor White
    Write-Host "2. Hacer login con admin@packfy.com / packfy123" -ForegroundColor White
    Write-Host "3. Verificar que la navegaci√≥n muestra opciones de admin" -ForegroundColor White
    Write-Host "4. Hacer clic en 'Env√≠os' en la navegaci√≥n superior" -ForegroundColor White
    Write-Host "5. ¬°Ahora deber√≠a ir a /admin/envios y mostrar la interfaz de admin!" -ForegroundColor Yellow

    Write-Host "`nüìù CAMBIOS IMPLEMENTADOS:" -ForegroundColor Magenta
    Write-Host "‚úÖ AdminNavigation actualizada para usar rutas /admin/*" -ForegroundColor White
    Write-Host "‚úÖ AdminRouter creado para manejar rutas de admin" -ForegroundColor White
    Write-Host "‚úÖ App.tsx configurado con ruta /admin/* ‚Üí AdminRouter" -ForegroundColor White
    Write-Host "‚úÖ AdminRouter detecta ruta y muestra componente apropiado" -ForegroundColor White

    Write-Host "`nüéØ EXPECTATIVA:" -ForegroundColor Cyan
    Write-Host "Cuando el usuario admin hace clic en 'Env√≠os' debe:" -ForegroundColor White
    Write-Host "‚Ä¢ Navegar a /admin/envios" -ForegroundColor White
    Write-Host "‚Ä¢ AdminRouter detectar la ruta" -ForegroundColor White
    Write-Host "‚Ä¢ Mostrar GestionEnvios pero en contexto de admin" -ForegroundColor White
    Write-Host "‚Ä¢ Ver navegaci√≥n de admin (no la b√°sica)" -ForegroundColor White

}
catch {
    Write-Host "‚ùå Error en autenticaci√≥n: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "`nüöÄ ¬°Listo para probar la interfaz actualizada!" -ForegroundColor Green
