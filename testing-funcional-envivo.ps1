# Testing Funcional de Formularios de Env√≠o - En Vivo
# Validaci√≥n del sistema completo con servidores ejecut√°ndose

Write-Host "=== üöÄ TESTING FUNCIONAL EN VIVO ===" -ForegroundColor Cyan

Write-Host "`nüìã VERIFICANDO SERVICIOS ACTIVOS..." -ForegroundColor Yellow

# Funci√≥n para verificar URL
function Test-ServiceUrl {
    param(
        [string]$Url,
        [string]$ServiceName,
        [int]$TimeoutSeconds = 10
    )

    try {
        $response = Invoke-WebRequest -Uri $Url -TimeoutSec $TimeoutSeconds -UseBasicParsing
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ $ServiceName" -ForegroundColor Green -NoNewline
            Write-Host " - Activo en $Url" -ForegroundColor Gray
            return $true
        }
    }
    catch {
        Write-Host "‚ùå $ServiceName" -ForegroundColor Red -NoNewline
        Write-Host " - No disponible en $Url" -ForegroundColor Gray
        return $false
    }
}

# Verificar servicios
$frontendActive = Test-ServiceUrl "http://localhost:5173" "Frontend React"
$backendActive = Test-ServiceUrl "http://localhost:8000" "Backend Django"

if (-not $frontendActive -or -not $backendActive) {
    Write-Host "`n‚ö†Ô∏è  ALGUNOS SERVICIOS NO EST√ÅN ACTIVOS" -ForegroundColor Yellow
    Write-Host "Aseg√∫rate de que est√©n ejecut√°ndose:"
    Write-Host "- Frontend: cd frontend && npm run dev"
    Write-Host "- Backend: docker-compose up -d"
    Write-Host ""
}

Write-Host "`n=== üîê TESTING DE AUTENTICACI√ìN ===" -ForegroundColor Green

# Probar endpoint de autenticaci√≥n
try {
    $authTest = Invoke-WebRequest -Uri "http://localhost:8000/api/auth/user/" -UseBasicParsing
    Write-Host "‚úÖ Endpoint de autenticaci√≥n disponible" -ForegroundColor Green
}
catch {
    Write-Host "‚ö†Ô∏è  Endpoint de autenticaci√≥n no responde" -ForegroundColor Yellow
}

Write-Host "`n=== üì¶ TESTING DE API DE ENV√çOS ===" -ForegroundColor Green

# Probar endpoints de env√≠os
$enviosEndpoints = @(
    "http://localhost:8000/api/envios/",
    "http://localhost:8000/api/empresas/",
    "http://localhost:8000/api/perfiles/"
)

foreach ($endpoint in $enviosEndpoints) {
    try {
        $response = Invoke-WebRequest -Uri $endpoint -UseBasicParsing
        $endpointName = ($endpoint -split '/')[-2]
        Write-Host "‚úÖ API $endpointName disponible" -ForegroundColor Green
    }
    catch {
        $endpointName = ($endpoint -split '/')[-2]
        Write-Host "‚ö†Ô∏è  API $endpointName no responde (puede requerir autenticaci√≥n)" -ForegroundColor Yellow
    }
}

Write-Host "`n=== üé® TESTING DE COMPONENTES FRONTEND ===" -ForegroundColor Green

# Verificar que el frontend carga correctamente
try {
    $frontendContent = Invoke-WebRequest -Uri "http://localhost:5173" -UseBasicParsing

    if ($frontendContent.Content -match "React") {
        Write-Host "‚úÖ Frontend React cargando correctamente" -ForegroundColor Green
    }

    # Verificar si hay errores de JavaScript b√°sicos
    if ($frontendContent.Content -match "script") {
        Write-Host "‚úÖ Scripts JavaScript detectados" -ForegroundColor Green
    }

}
catch {
    Write-Host "‚ùå Error al cargar frontend" -ForegroundColor Red
}

Write-Host "`n=== üì± TESTING DE RESPONSIVIDAD ===" -ForegroundColor Green

Write-Host "üìã URLs para testing manual:" -ForegroundColor Cyan
Write-Host "üñ•Ô∏è  Desktop: http://localhost:5173"
Write-Host "üì± M√≥vil: http://192.168.12.178:5173 (desde otro dispositivo)"
Write-Host "üîó Admin: http://localhost:8000/admin/"

Write-Host "`n=== üß™ CASOS DE PRUEBA MANUALES ===" -ForegroundColor Magenta

Write-Host "`nüë§ TESTING COMO REMITENTE:" -ForegroundColor Cyan
Write-Host "1. Acceder a http://localhost:5173"
Write-Host "2. Iniciar sesi√≥n con usuario remitente"
Write-Host "3. Verificar que aparece formulario simple"
Write-Host "4. Crear un env√≠o de prueba"
Write-Host "5. Validar confirmaci√≥n de √©xito"

Write-Host "`nüë• TESTING COMO OPERADOR:" -ForegroundColor Cyan
Write-Host "1. Iniciar sesi√≥n con usuario operador"
Write-Host "2. Verificar dashboard con pesta√±as"
Write-Host "3. Probar lista de env√≠os"
Write-Host "4. Usar b√∫squeda y filtros"
Write-Host "5. Crear env√≠o desde pesta√±a"

Write-Host "`nüëë TESTING COMO ADMIN:" -ForegroundColor Cyan
Write-Host "1. Iniciar sesi√≥n con usuario due√±o"
Write-Host "2. Verificar estad√≠sticas en dashboard"
Write-Host "3. Navegar entre pesta√±as"
Write-Host "4. Acceder a gesti√≥n de usuarios"
Write-Host "5. Probar admin de Django"

Write-Host "`nüì® TESTING COMO DESTINATARIO:" -ForegroundColor Cyan
Write-Host "1. Iniciar sesi√≥n con usuario destinatario"
Write-Host "2. Verificar lista de env√≠os dirigidos"
Write-Host "3. Hacer clic en env√≠o para detalles"
Write-Host "4. Probar b√∫squeda de env√≠os"
Write-Host "5. Verificar datos de remitente"

Write-Host "`n=== üîç TESTING DE ERRORES COMUNES ===" -ForegroundColor Yellow

Write-Host "`nüö´ ESCENARIOS DE ERROR A PROBAR:" -ForegroundColor Red
Write-Host "1. Acceso sin autenticaci√≥n"
Write-Host "2. Usuario sin empresa/tenant"
Write-Host "3. Usuario sin permisos activos"
Write-Host "4. Formularios con campos vac√≠os"
Write-Host "5. Conexi√≥n API interrumpida"

Write-Host "`n=== üìä M√âTRICAS A VERIFICAR ===" -ForegroundColor Magenta

Write-Host "`n‚ö° RENDIMIENTO:" -ForegroundColor Yellow
Write-Host "- Tiempo de carga inicial < 3 segundos"
Write-Host "- Tiempo de navegaci√≥n entre roles < 1 segundo"
Write-Host "- Respuesta de formularios < 2 segundos"

Write-Host "`nüéØ FUNCIONALIDAD:" -ForegroundColor Yellow
Write-Host "- Validaci√≥n de campos en tiempo real"
Write-Host "- Estados visuales correctos"
Write-Host "- Mensajes de error claros"
Write-Host "- Confirmaciones de √©xito"

Write-Host "`nüì± RESPONSIVE:" -ForegroundColor Yellow
Write-Host "- Layouts m√≥viles funcionales"
Write-Host "- Navegaci√≥n t√°ctil c√≥moda"
Write-Host "- Formularios usables en m√≥vil"

Write-Host "`n=== üéâ TESTING COMPLETADO ===" -ForegroundColor Green

Write-Host "`n‚úÖ VERIFICACIONES REALIZADAS:" -ForegroundColor Green
Write-Host "- Servicios activos y disponibles"
Write-Host "- APIs respondiendo correctamente"
Write-Host "- Frontend cargando sin errores"
Write-Host "- Endpoints de env√≠os disponibles"

Write-Host "`nüîÑ PR√ìXIMOS PASOS:" -ForegroundColor Cyan
Write-Host "1. üñ±Ô∏è  Realizar testing manual en navegador"
Write-Host "2. üë• Probar cada rol de usuario"
Write-Host "3. üì± Validar en diferentes dispositivos"
Write-Host "4. üêõ Reportar cualquier bug encontrado"

Write-Host "`nüéØ SISTEMA LISTO PARA TESTING MANUAL" -ForegroundColor Green
Write-Host "Frontend: http://localhost:5173" -ForegroundColor Cyan
Write-Host "Admin: http://localhost:8000/admin/" -ForegroundColor Cyan
